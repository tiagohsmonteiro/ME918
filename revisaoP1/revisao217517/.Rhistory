# Crie uma função que recebe 3 argumentos:
# • df: Um objeto do tipo Data.Frame.
# • variavel: Uma coluna do Data.Frame especificado em df.
# • tipo: Uma string sendo "densidade" ou "histograma"
#
# A função deve retornar um gráfico (objeto) do pacote ggplot2, com o gráfico de densidade ou histograma,
# caso o tipo passado seja "densidade" ou "histograma" respectivamente, da coluna especificada por em
# variavel no conjunto de dados especificado em df.
# Caso o tipo não seja um desses ou a coluna variavel não pertença ao df ou não seja do tipo numeric, a
# função deve retornar um erro.
# Essa função deve ser minimamente documentada com as descrições dos argumentos e o retorno em cada caso
#' @importFrom ggplot2 ggplot aes geom_density geom_histogram
#' @export
visualiza <- function(df, variavel, tipo = c("densidade", "histograma")){
if (is.data.frame(df) == FALSE | is.numeric(variavel) == FALSE){
stop("'df' não é do tipo data.frame ou 'variavel' não é do tipo numérico")
}
if (!(tipo %in% c("densidade", "histograma"))) {
stop("'tipo' deve ser 'densidade' ou 'histograma'")
}
if (tipo == "densidade"){
output <- ggplot(df, aes(x = variavel)) +
geom_density()
} else{
output <- ggplot(df, aes(x = variavel)) +
geom_histogram()
}
return(output)
}
iris["Sepal.Length"]
is.numeric(iris["Sepal.Length"])
class(iris["Sepal.Length"])
class(iris$Sepal.Length)
iris{{Sepal.Length}}
iris[[Sepal.Length]]
visualiza(iris, Sepal.Length, "densidade")
visualiza(iris, "Sepal.Length", "densidade")
iris$"Sepal.Length"
class(iris$"Sepal.Length")
is.numeric(iris$"Sepal.Length")
is.data.frame(iris)
visualiza(iris, "Sepal.Length", "densidade")
names(iris)
#' @importFrom ggplot2 ggplot aes geom_density geom_histogram
#' @export
visualiza <- function(df, variavel, tipo = c("densidade", "histograma")){
if (!(variavel %in% names(df)) | is.numeric(df$variavel) == FALSE){
stop("'variavel' não encontrada em 'df' ou 'variavel' não é do tipo numérico")
}
if (!(tipo %in% c("densidade", "histograma"))) {
stop("'tipo' deve ser 'densidade' ou 'histograma'")
}
if (tipo == "densidade"){
output <- ggplot(df, aes(x = variavel)) +
geom_density()
} else{
output <- ggplot(df, aes(x = variavel)) +
geom_histogram()
}
return(output)
}
visualiza(iris, "Sepal.Length", "densidade")
"Sepal.Length" %in% names(iris)
#' @importFrom ggplot2 ggplot aes geom_density geom_histogram
#' @export
visualiza <- function(df, variavel, tipo = c("densidade", "histograma")){
if (!(variavel %in% names(df))){
stop("'variavel' não encontrada em 'df'")
}
if (is.numeric(df$variavel) == FALSE){
stop("'variavel' não é do tipo 'numeric'")
}
if (!(tipo %in% c("densidade", "histograma"))) {
stop("'tipo' deve ser 'densidade' ou 'histograma'")
}
if (tipo == "densidade"){
output <- ggplot(df, aes(x = variavel)) +
geom_density()
} else{
output <- ggplot(df, aes(x = variavel)) +
geom_histogram()
}
return(output)
}
visualiza(iris, "Sepal.Length", "densidade")
is.numeric(iris$"Sepal.Length")
names(iris)
visualiza(iris, "Sepal.Length", "densidade")
visualiza(df = iris, variavel = "Sepal.Length", tipo = "densidade")
is.numeric(iris$"Sepal.Length") == F
!("Sepal.Length" %in% names(iris))
is.numeric(df$"Sepal.Length")
is.numeric(iris$"Sepal.Length")
#' @importFrom ggplot2 ggplot aes geom_density geom_histogram
#' @export
visualiza <- function(df, variavel, tipo = c("densidade", "histograma")){
if (!(variavel %in% names(df))){
stop("'variavel' não encontrada em 'df'")
}
if (is.numeric(df$variavel) == TRUE){
stop("'variavel' não é do tipo 'numeric'")
}
if (!(tipo %in% c("densidade", "histograma"))){
stop("'tipo' deve ser 'densidade' ou 'histograma'")
}
if (tipo == "densidade"){
output <- ggplot(df, aes(x = variavel)) +
geom_density()
} else{
output <- ggplot(df, aes(x = variavel)) +
geom_histogram()
}
return(output)
}
visualiza(df = iris, variavel = "Sepal.Length", tipo = "densidade")
#' @importFrom ggplot2 ggplot aes geom_density geom_histogram
#' @export
visualiza <- function(df, variavel, tipo = c("densidade", "histograma")){
if (!(variavel %in% names(df))){
stop("'variavel' não encontrada em 'df'")
}
if (is.numeric(df$variavel) == FALSE){
stop("'variavel' não é do tipo 'numeric'")
}
if (!(tipo %in% c("densidade", "histograma"))){
stop("'tipo' deve ser 'densidade' ou 'histograma'")
}
if (tipo == "densidade"){
output <- ggplot(df, aes(x = variavel)) +
geom_density()
} else{
output <- ggplot(df, aes(x = variavel)) +
geom_histogram()
}
return(output)
}
iris[["Sepal.Length"]]
class(iris[["Sepal.Length"]])
#' @importFrom ggplot2 ggplot aes geom_density geom_histogram
#' @export
visualiza <- function(df, variavel, tipo = c("densidade", "histograma")){
if (!(variavel %in% names(df))){
stop("'variavel' não encontrada em 'df'")
}
if (is.numeric(df[[variavel]]) == FALSE){
stop("'variavel' não é do tipo 'numeric'")
}
if (!(tipo %in% c("densidade", "histograma"))){
stop("'tipo' deve ser 'densidade' ou 'histograma'")
}
if (tipo == "densidade"){
output <- ggplot(df, aes(x = df[[variavel]])) +
geom_density()
} else{
output <- ggplot(df, aes(x = df[[variavel]])) +
geom_histogram()
}
return(output)
}
visualiza(df = iris, variavel = "Sepal.Length", tipo = "densidade")
library(ggplot2)
visualiza(df = iris, variavel = "Sepal.Length", tipo = "densidade")
visualiza(df = iris, variavel = "Sepal.Length", tipo = "histograma")
#' @importFrom ggplot2 ggplot aes geom_density geom_histogram
#' @export
visualiza <- function(df, variavel, tipo = c("densidade", "histograma")){
if (!(variavel %in% names(df))){
stop("'variavel' não encontrada em 'df'")
}
if (is.numeric(df[[variavel]]) == FALSE){
stop("'variavel' não é do tipo 'numeric'")
}
if (!(tipo %in% c("densidade", "histograma"))){
stop("'tipo' deve ser 'densidade' ou 'histograma'")
}
if (tipo == "densidade"){
output <- ggplot(df, aes(x = df[[variavel]])) +
geom_density() +
labs(x = variavel, title = paste0("Densidade de ", variavel)) +
theme_classic()
} else{
output <- ggplot(df, aes(x = df[[variavel]])) +
geom_histogram() +
labs(x = variavel, title = paste0("Histograma de ", variavel)) +
theme_classic()
}
return(output)
}
visualiza(df = iris, variavel = "Sepal.Length", tipo = "histograma")
library(revisao217517)
library(revisao217517)
visualiza(iris, "Sepal.Length", "histograma")
resposta()
verifica(FALSE)
verifica(TRUE)
?visualiza
??visualiza
library(revisao217517)
?visualiza
?visualiza()
library(revisao217517)
